apiVersion: tenancy.x-k8s.io/v1alpha1
kind: ClusterVersion
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: cv-sample-np
spec:
  etcd:
    metadata:
      name: etcd 
    statefulset:
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: etcd
      spec:
        replicas: 1
        revisionHistoryLimit: 10
        serviceName: etcd
        selector:
          matchLabels:
            component-name: etcd
        updateStrategy:
          type: OnDelete
        template:
          metadata:
            labels:
              component-name: etcd
          spec:
            subdomain: etcd
            containers:
            - name: etcd
              image: k8s.gcr.io/etcd:3.5.6-0
              imagePullPolicy: Always
              command: 
              - etcd
              env:
              - name: HOSTNAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name 
              args:
              - --name=$(HOSTNAME)
              - --trusted-ca-file=/etc/kubernetes/pki/root/tls.crt
              - --client-cert-auth
              - --cert-file=/etc/kubernetes/pki/etcd/tls.crt
              - --key-file=/etc/kubernetes/pki/etcd/tls.key
              - --peer-client-cert-auth 
              - --peer-trusted-ca-file=/etc/kubernetes/pki/root/tls.crt
              - --peer-cert-file=/etc/kubernetes/pki/etcd/tls.crt
              - --peer-key-file=/etc/kubernetes/pki/etcd/tls.key
              - --listen-peer-urls=https://0.0.0.0:2380 
              - --listen-client-urls=https://0.0.0.0:2379
              - --initial-advertise-peer-urls=https://$(HOSTNAME).etcd:2380
              - --advertise-client-urls=https://$(HOSTNAME).etcd:2379
              - --initial-cluster-state=new
              - --initial-cluster-token=vc-etcd
              - --data-dir=/var/lib/etcd/data
              livenessProbe:
                exec:
                  command: 
                  - /usr/local/bin/etcdctl
                  - --endpoints=https://etcd:2379
                  - --cacert=/etc/kubernetes/pki/root/tls.crt
                  - --cert=/etc/kubernetes/pki/etcd/tls.crt
                  - --key=/etc/kubernetes/pki/etcd/tls.key
                  - endpoint
                  - health
                failureThreshold: 8
                initialDelaySeconds: 60
                timeoutSeconds: 15
              readinessProbe:
                exec:
                  command: 
                  - /usr/local/bin/etcdctl
                  - --endpoints=https://etcd:2379
                  - --cacert=/etc/kubernetes/pki/root/tls.crt
                  - --cert=/etc/kubernetes/pki/etcd/tls.crt
                  - --key=/etc/kubernetes/pki/etcd/tls.key
                  - endpoint
                  - health
                failureThreshold: 8
                initialDelaySeconds: 15
                periodSeconds: 2
                timeoutSeconds: 15
              volumeMounts:
              - mountPath: /etc/kubernetes/pki/etcd
                name: etcd-ca
                readOnly: true
              - mountPath: /etc/kubernetes/pki/root
                name: root-ca
                readOnly: true
            volumes: 
            - name: etcd-ca
              secret:
                defaultMode: 420
                secretName: etcd-ca
            - name: root-ca
              secret:
                defaultMode: 420
                secretName: root-ca
    service:
      apiVersion: v1
      kind: Service
      metadata:
        name: etcd
      spec:
        publishNotReadyAddresses: true
        type: ClusterIP
        clusterIP: None
        selector:
          component-name: etcd
  apiServer:
    metadata:
      name: apiserver
    statefulset:
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: apiserver
      spec:
        replicas: 1
        revisionHistoryLimit: 10
        serviceName: apiserver-svc
        selector:
          matchLabels:
            component-name: apiserver
        updateStrategy:
          type: OnDelete
        template:
          metadata:
            labels:
              component-name: apiserver
          spec:
            hostname: apiserver
            subdomain: apiserver-svc
            containers:
            - name: apiserver
              image: registry.k8s.io/kube-apiserver:v1.29.3
              imagePullPolicy: Always
              command:
              - kube-apiserver
              args:
              - --bind-address=0.0.0.0
              - --allow-privileged=true
              - --client-ca-file=/etc/kubernetes/pki/root/tls.crt
              - --tls-cert-file=/etc/kubernetes/pki/apiserver/tls.crt
              - --tls-private-key-file=/etc/kubernetes/pki/apiserver/tls.key
              - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver/tls.crt
              - --kubelet-client-key=/etc/kubernetes/pki/apiserver/tls.key
              - --enable-bootstrap-token-auth=true
              - --etcd-servers=https://etcd-0.etcd:2379
              - --etcd-cafile=/etc/kubernetes/pki/root/tls.crt
              - --etcd-certfile=/etc/kubernetes/pki/apiserver/tls.crt
              - --etcd-keyfile=/etc/kubernetes/pki/apiserver/tls.key
              - --service-account-issuer=api
              - --service-account-signing-key-file=/etc/kubernetes/pki/service-account/tls.key
              - --service-account-key-file=/etc/kubernetes/pki/service-account/tls.key
              - --service-cluster-ip-range=10.32.0.0/16
              - --service-node-port-range=30000-32767
              - --authorization-mode=Node,RBAC
              - --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
              - --apiserver-count=1
              - --enable-aggregator-routing=true
              - --requestheader-client-ca-file=/etc/kubernetes/pki/root/tls.crt
              - --requestheader-allowed-names=front-proxy-client
              - --requestheader-username-headers=X-Remote-User
              - --requestheader-group-headers=X-Remote-Group
              - --requestheader-extra-headers-prefix=X-Remote-Extra-
              - --proxy-client-key-file=/etc/kubernetes/pki/frontproxy/tls.key
              - --proxy-client-cert-file=/etc/kubernetes/pki/frontproxy/tls.crt
              - --v=2
              ports:
              - containerPort: 6443
                protocol: TCP
                name: api
              livenessProbe:
                tcpSocket:
                  port: 6443
                failureThreshold: 8
                initialDelaySeconds: 15
                periodSeconds: 10
                timeoutSeconds: 15
              readinessProbe:
                httpGet:
                  port: 6443
                  path: /healthz
                  scheme: HTTPS
                failureThreshold: 8
                initialDelaySeconds: 5
                periodSeconds: 2
                timeoutSeconds: 30
              volumeMounts:
              - mountPath: /etc/kubernetes/pki/apiserver
                name: apiserver-ca
                readOnly: true
              - mountPath: /etc/kubernetes/pki/frontproxy
                name: front-proxy-ca
                readOnly: true
              - mountPath: /etc/kubernetes/pki/root
                name: root-ca
                readOnly: true
              - mountPath: /etc/kubernetes/pki/service-account
                name: serviceaccount-rsa
                readOnly: true
            securityContext: {}
            terminationGracePeriodSeconds: 30
            dnsConfig:
              searches:
              - cluster.local
            volumes:
            - name: apiserver-ca
              secret:
                defaultMode: 420
                secretName: apiserver-ca
            - name: root-ca
              secret:
                defaultMode: 420
                secretName: root-ca
            - name: front-proxy-ca
              secret:
                defaultMode: 420
                secretName: front-proxy-ca
            - name: serviceaccount-rsa
              secret:
                defaultMode: 420
                secretName: serviceaccount-rsa
    service:
      apiVersion: v1
      kind: Service
      metadata:
        name: apiserver-svc
      spec:
        selector:
          component-name: apiserver
        type: NodePort
        ports:
        - port: 6443
          protocol: TCP
          targetPort: api
  controllerManager:
    metadata:
      name: controller-manager
    statefulset:  
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: controller-manager
      spec:
        serviceName: controller-manager-svc
        replicas: 1
        selector:
          matchLabels:
            component-name: controller-manager
        updateStrategy:
          type: OnDelete
        template:
          metadata:
            labels:
              component-name: controller-manager
          spec:
            containers:
            - name: controller-manager
              image: registry.k8s.io/kube-controller-manager:v1.29.3
              imagePullPolicy: Always
              command:
              - kube-controller-manager
              args:
              - --bind-address=0.0.0.0
              - --cluster-cidr=10.200.0.0/16
              - --cluster-signing-cert-file=/etc/kubernetes/pki/root/tls.crt
              - --cluster-signing-key-file=/etc/kubernetes/pki/root/tls.key
              - --kubeconfig=/etc/kubernetes/kubeconfig/controller-manager-kubeconfig
              - --authorization-kubeconfig=/etc/kubernetes/kubeconfig/controller-manager-kubeconfig
              - --authentication-kubeconfig=/etc/kubernetes/kubeconfig/controller-manager-kubeconfig
              - --leader-elect=false
              - --root-ca-file=/etc/kubernetes/pki/root/tls.crt
              - --service-account-private-key-file=/etc/kubernetes/pki/service-account/tls.key
              - --service-cluster-ip-range=10.32.0.0/24
              - --use-service-account-credentials=true
              - --node-monitor-grace-period=200s
              - --v=5
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 10257
                  scheme: HTTPS
                failureThreshold: 8
                initialDelaySeconds: 15
                periodSeconds: 10
                timeoutSeconds: 15
              volumeMounts:
              - mountPath: /etc/kubernetes/pki/root
                name: root-ca
                readOnly: true
              - mountPath: /etc/kubernetes/pki/service-account
                name: serviceaccount-rsa
                readOnly: true
              - mountPath: /etc/kubernetes/kubeconfig
                name: kubeconfig
                readOnly: true
            volumes:
            - name: root-ca
              secret:
                defaultMode: 420
                secretName: root-ca
            - name: serviceaccount-rsa 
              secret:
                defaultMode: 420
                secretName: serviceaccount-rsa
            - name: kubeconfig
              secret:
                defaultMode: 420
                secretName: controller-manager-kubeconfig